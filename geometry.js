bearings = [
    -143.61805901667552,
    -129.9548351553036,
    -127.8977442400158,
    -125.59058254729653,
    -126.64395917335004,
    -139.4928306238096,
    8.34096610002947,
    5.774132608170364,
    -18.22103081355421,
    -38.58842899244719,
    -54.97779461319678,
    -70.66426807385841,
    -64.57274567021803,
    -60.355664097953785,
    8.830773594228988,
    17.02480970879345,
    25.98795645487085,
    30.06459726882126,
    32.73646730391168,
    34.75492816427591,
    37.938548944488865,
    41.186591556192525,
    48.10146124324212,
    89.25501760232517,
    117.51252010748057,
    122.07552788583907,
    129.55957651028749,
    112.80206685673595,
    84.11512429482993,
    58.72516832482096,
    56.524308619454935,
    -160.07165656841713,
    -162.1347539296802,
    -171.48332329269567,
    -172.51589519379314,
    -170.0922693344197,
    -167.15476405480672,
    -155.80430845424652,
    -151.0005220722195,
    -143.61805901667552
  ];
distances = [
    0.025149646617825445,
    0.030555366260118736,
    0.030315858711726377,
    0.02941785078302638,
    0.02700950227891508,
    0.019886073253727512,
    0.009240236897335566,
    0.012080250080413314,
    0.013311762249312407,
    0.0156964771540219,
    0.02050701362918801,
    0.030256412510749748,
    0.03119655517368191,
    0.030115273738946083,
    0.02013666206111047,
    0.020809894661760416,
    0.03702332955763711,
    0.04062080432897339,
    0.04179401015032303,
    0.040962820048063724,
    0.03696433940483317,
    0.023116427784204224,
    0.020619314411187726,
    0.02022676715526905,
    0.027316335183764646,
    0.028001303019769868,
    0.02688242064227216,
    0.01868368010783828,
    0.013542979422968988,
    0.013274471337691747,
    0.010453154212345933,
    0.01661505006571978,
    0.02009068268338781,
    0.026416816685454196,
    0.02811593187860178,
    0.028552361409422546,
    0.02884849257241616,
    0.02480260563722948,
    0.024579855720020964,
    0.025149646617825445
  ]
function polygonToMarker(center, coordinates, bearing ){
    distances = []
    bearings = []
    centroid = turf.center(turf.polygon([coordinates]))
        for(i in coordinates){
            to = turf.point(coordinates[i]);
            options = {units: 'kilometers'};
            distanceI = turf.distance(centroid, to, options);
            bearingI = turf.bearing(centroid, to);
            bearings.push(bearingI)
            distances.push(distanceI)
            }
    //console.log({distances, bearings})
    points = []
    for(j in distances){
        distanceJ = distances[j]
        bearingJ = bearings[j]
        point = turf.destination(center, distanceJ, bearingJ);
        points.push(point.geometry.coordinates)
    }
    if(bearing){
        tempPolygon = turf.polygon([points])
        return turf.transformRotate(tempPolygon,bearing);
    }else{
        return turf.polygon([points])
    }
}